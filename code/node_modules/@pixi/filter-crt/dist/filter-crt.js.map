{"version":3,"file":"filter-crt.js","sources":["../src/CRTFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './crt.frag';\nimport {Filter} from '@pixi/core';\n\n/**\n * The CRTFilter applies a CRT effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/crt.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-crt|@pixi/filter-crt}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {object} [options] - The optional parameters of CRT effect\n * @param {number} [options.curvature=1.0] - Bent of interlaced lines, higher value means more bend\n * @param {number} [options.lineWidth=1.0] - Width of the interlaced lines\n * @param {number} [options.lineContrast=0.25] - Contrast of interlaced lines\n * @param {number} [options.verticalLine=false] - `true` is vertical lines, `false` is horizontal\n * @param {number} [options.noise=0.3] - Opacity/intensity of the noise effect between `0` and `1`\n * @param {number} [options.noiseSize=1.0] - The size of the noise particles\n * @param {number} [options.seed=0] - A seed value to apply to the random noise generation\n * @param {number} [options.vignetting=0.3] - The radius of the vignette effect, smaller\n *        values produces a smaller vignette\n * @param {number} [options.vignettingAlpha=1.0] - Amount of opacity of vignette\n * @param {number} [options.vignettingBlur=0.3] - Blur intensity of the vignette\n * @param {number} [options.time=0] - For animating interlaced lines\n */\nclass CRTFilter extends Filter {\n    constructor(options) {\n        super(vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        /**\n         * For animating interlaced lines\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.time = 0;\n\n        /**\n         * A seed value to apply to the random noise generation\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.seed = 0;\n\n        Object.assign(this, {\n            curvature: 1.0,\n            lineWidth: 1.0,\n            lineContrast: 0.25,\n            verticalLine: false,\n            noise: 0.0,\n            noiseSize: 1.0,\n            seed: 0.0,\n            vignetting: 0.3,\n            vignettingAlpha: 1.0,\n            vignettingBlur: 0.3,\n            time: 0.0,\n        }, options);\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n\n        this.uniforms.seed = this.seed;\n        this.uniforms.time = this.time;\n\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * Bent of interlaced lines, higher value means more bend\n     *\n     * @member {number}\n     * @default 1\n     */\n    set curvature(value) {\n        this.uniforms.curvature = value;\n    }\n    get curvature() {\n        return this.uniforms.curvature;\n    }\n\n    /**\n     * Width of interlaced lines\n     *\n     * @member {number}\n     * @default 1\n     */\n    set lineWidth(value) {\n        this.uniforms.lineWidth = value;\n    }\n    get lineWidth() {\n        return this.uniforms.lineWidth;\n    }\n\n    /**\n     * Contrast of interlaced lines\n     *\n     * @member {number}\n     * @default 0.25\n     */\n    set lineContrast(value) {\n        this.uniforms.lineContrast = value;\n    }\n    get lineContrast() {\n        return this.uniforms.lineContrast;\n    }\n\n    /**\n     * `true` for vertical lines, `false` for horizontal lines\n     *\n     * @member {boolean}\n     * @default false\n     */\n    set verticalLine(value) {\n        this.uniforms.verticalLine = value;\n    }\n    get verticalLine() {\n        return this.uniforms.verticalLine;\n    }\n\n    /**\n     * Opacity/intensity of the noise effect between `0` and `1`\n     *\n     * @member {number}\n     * @default 0\n     */\n    set noise(value) {\n        this.uniforms.noise = value;\n    }\n    get noise() {\n        return this.uniforms.noise;\n    }\n\n    /**\n     * The size of the noise particles\n     *\n     * @member {number}\n     * @default 0\n     */\n    set noiseSize(value) {\n        this.uniforms.noiseSize = value;\n    }\n    get noiseSize() {\n        return this.uniforms.noiseSize;\n    }\n\n    /**\n     * The radius of the vignette effect, smaller\n     * values produces a smaller vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    set vignetting(value) {\n        this.uniforms.vignetting = value;\n    }\n    get vignetting() {\n        return this.uniforms.vignetting;\n    }\n\n    /**\n     * Amount of opacity of vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    set vignettingAlpha(value) {\n        this.uniforms.vignettingAlpha = value;\n    }\n    get vignettingAlpha() {\n        return this.uniforms.vignettingAlpha;\n    }\n\n    /**\n     * Blur intensity of the vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    set vignettingBlur(value) {\n        this.uniforms.vignettingBlur = value;\n    }\n    get vignettingBlur() {\n        return this.uniforms.vignettingBlur;\n    }\n}\n\nexport { CRTFilter };\n\n"],"names":["CRTFilter","options","super","vertex","fragment","this","uniforms","dimensions","Float32Array","time","seed","Object","assign","curvature","lineWidth","lineContrast","verticalLine","noise","noiseSize","vignetting","vignettingAlpha","vignettingBlur","apply","filterManager","input","output","clear","filterFrame","width","height","applyFilter","prototypeAccessors","value","Filter"],"mappings":";;;;;;;gwEA4BMA,cACF,WAAYC,GACRC,YAAMC,EAAQC,GACdC,KAAKC,SAASC,WAAa,IAAIC,aAAa,GAQ5CH,KAAKI,KAAO,EAQZJ,KAAKK,KAAO,EAEZC,OAAOC,OAAOP,KAAM,CAChBQ,UAAW,EACXC,UAAW,EACXC,aAAc,IACdC,cAAc,EACdC,MAAO,EACPC,UAAW,EACXR,KAAM,EACNS,WAAY,GACZC,gBAAiB,EACjBC,eAAgB,GAChBZ,KAAM,GACPR,+XAOPqB,eAAMC,EAAeC,EAAOC,EAAQC,GAChCrB,KAAKC,SAASC,WAAW,GAAKiB,EAAMG,YAAYC,MAChDvB,KAAKC,SAASC,WAAW,GAAKiB,EAAMG,YAAYE,OAEhDxB,KAAKC,SAASI,KAAOL,KAAKK,KAC1BL,KAAKC,SAASG,KAAOJ,KAAKI,KAE1Bc,EAAcO,YAAYzB,KAAMmB,EAAOC,EAAQC,IASnDK,EAAIlB,uBAAUmB,GACV3B,KAAKC,SAASO,UAAYmB,GAE9BD,EAAIlB,yBACA,OAAOR,KAAKC,SAASO,WASzBkB,EAAIjB,uBAAUkB,GACV3B,KAAKC,SAASQ,UAAYkB,GAE9BD,EAAIjB,yBACA,OAAOT,KAAKC,SAASQ,WASzBiB,EAAIhB,0BAAaiB,GACb3B,KAAKC,SAASS,aAAeiB,GAEjCD,EAAIhB,4BACA,OAAOV,KAAKC,SAASS,cASzBgB,EAAIf,0BAAagB,GACb3B,KAAKC,SAASU,aAAegB,GAEjCD,EAAIf,4BACA,OAAOX,KAAKC,SAASU,cASzBe,EAAId,mBAAMe,GACN3B,KAAKC,SAASW,MAAQe,GAE1BD,EAAId,qBACA,OAAOZ,KAAKC,SAASW,OASzBc,EAAIb,uBAAUc,GACV3B,KAAKC,SAASY,UAAYc,GAE9BD,EAAIb,yBACA,OAAOb,KAAKC,SAASY,WAUzBa,EAAIZ,wBAAWa,GACX3B,KAAKC,SAASa,WAAaa,GAE/BD,EAAIZ,0BACA,OAAOd,KAAKC,SAASa,YASzBY,EAAIX,6BAAgBY,GAChB3B,KAAKC,SAASc,gBAAkBY,GAEpCD,EAAIX,+BACA,OAAOf,KAAKC,SAASc,iBASzBW,EAAIV,4BAAeW,GACf3B,KAAKC,SAASe,eAAiBW,GAEnCD,EAAIV,8BACA,OAAOhB,KAAKC,SAASe,0DArKLY"}