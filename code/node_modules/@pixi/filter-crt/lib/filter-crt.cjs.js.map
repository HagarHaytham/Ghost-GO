{"version":3,"file":"filter-crt.cjs.js","sources":["../src/CRTFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './crt.frag';\nimport {Filter} from '@pixi/core';\n\n/**\n * The CRTFilter applies a CRT effect to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/crt.gif)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-crt|@pixi/filter-crt}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {object} [options] - The optional parameters of CRT effect\n * @param {number} [options.curvature=1.0] - Bent of interlaced lines, higher value means more bend\n * @param {number} [options.lineWidth=1.0] - Width of the interlaced lines\n * @param {number} [options.lineContrast=0.25] - Contrast of interlaced lines\n * @param {number} [options.verticalLine=false] - `true` is vertical lines, `false` is horizontal\n * @param {number} [options.noise=0.3] - Opacity/intensity of the noise effect between `0` and `1`\n * @param {number} [options.noiseSize=1.0] - The size of the noise particles\n * @param {number} [options.seed=0] - A seed value to apply to the random noise generation\n * @param {number} [options.vignetting=0.3] - The radius of the vignette effect, smaller\n *        values produces a smaller vignette\n * @param {number} [options.vignettingAlpha=1.0] - Amount of opacity of vignette\n * @param {number} [options.vignettingBlur=0.3] - Blur intensity of the vignette\n * @param {number} [options.time=0] - For animating interlaced lines\n */\nclass CRTFilter extends Filter {\n    constructor(options) {\n        super(vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n\n        /**\n         * For animating interlaced lines\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.time = 0;\n\n        /**\n         * A seed value to apply to the random noise generation\n         *\n         * @member {number}\n         * @default 0\n         */\n        this.seed = 0;\n\n        Object.assign(this, {\n            curvature: 1.0,\n            lineWidth: 1.0,\n            lineContrast: 0.25,\n            verticalLine: false,\n            noise: 0.0,\n            noiseSize: 1.0,\n            seed: 0.0,\n            vignetting: 0.3,\n            vignettingAlpha: 1.0,\n            vignettingBlur: 0.3,\n            time: 0.0,\n        }, options);\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n\n        this.uniforms.seed = this.seed;\n        this.uniforms.time = this.time;\n\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * Bent of interlaced lines, higher value means more bend\n     *\n     * @member {number}\n     * @default 1\n     */\n    set curvature(value) {\n        this.uniforms.curvature = value;\n    }\n    get curvature() {\n        return this.uniforms.curvature;\n    }\n\n    /**\n     * Width of interlaced lines\n     *\n     * @member {number}\n     * @default 1\n     */\n    set lineWidth(value) {\n        this.uniforms.lineWidth = value;\n    }\n    get lineWidth() {\n        return this.uniforms.lineWidth;\n    }\n\n    /**\n     * Contrast of interlaced lines\n     *\n     * @member {number}\n     * @default 0.25\n     */\n    set lineContrast(value) {\n        this.uniforms.lineContrast = value;\n    }\n    get lineContrast() {\n        return this.uniforms.lineContrast;\n    }\n\n    /**\n     * `true` for vertical lines, `false` for horizontal lines\n     *\n     * @member {boolean}\n     * @default false\n     */\n    set verticalLine(value) {\n        this.uniforms.verticalLine = value;\n    }\n    get verticalLine() {\n        return this.uniforms.verticalLine;\n    }\n\n    /**\n     * Opacity/intensity of the noise effect between `0` and `1`\n     *\n     * @member {number}\n     * @default 0\n     */\n    set noise(value) {\n        this.uniforms.noise = value;\n    }\n    get noise() {\n        return this.uniforms.noise;\n    }\n\n    /**\n     * The size of the noise particles\n     *\n     * @member {number}\n     * @default 0\n     */\n    set noiseSize(value) {\n        this.uniforms.noiseSize = value;\n    }\n    get noiseSize() {\n        return this.uniforms.noiseSize;\n    }\n\n    /**\n     * The radius of the vignette effect, smaller\n     * values produces a smaller vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    set vignetting(value) {\n        this.uniforms.vignetting = value;\n    }\n    get vignetting() {\n        return this.uniforms.vignetting;\n    }\n\n    /**\n     * Amount of opacity of vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    set vignettingAlpha(value) {\n        this.uniforms.vignettingAlpha = value;\n    }\n    get vignettingAlpha() {\n        return this.uniforms.vignettingAlpha;\n    }\n\n    /**\n     * Blur intensity of the vignette\n     *\n     * @member {number}\n     * @default 0\n     */\n    set vignettingBlur(value) {\n        this.uniforms.vignettingBlur = value;\n    }\n    get vignettingBlur() {\n        return this.uniforms.vignettingBlur;\n    }\n}\n\nexport { CRTFilter };\n\n"],"names":["super","Filter"],"mappings":"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"}