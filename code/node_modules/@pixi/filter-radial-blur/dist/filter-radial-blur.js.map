{"version":3,"file":"filter-radial-blur.js","sources":["../src/RadialBlurFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './radial-blur.frag';\nimport {Filter} from '@pixi/core';\n\n/**\n * The RadialBlurFilter applies a Motion blur to an object.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/radial-blur.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-radial-blur|@pixi/filter-radial-blur}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [angle=0] Sets the angle of the motion for blur effect.\n * @param {PIXI.Point|number[]} [center=[0,0]] The center of the radial.\n * @param {number} [kernelSize=5] - The kernelSize of the blur filter. But be odd number >= 3\n * @param {number} [radius=-1] - The maximum size of the blur radius, `-1` is infinite\n */\nclass RadialBlurFilter extends Filter {\n    constructor(angle = 0, center = [0, 0], kernelSize = 5, radius = -1) {\n        super(vertex, fragment);\n\n        this._angle = 0;\n        this.angle = angle;\n        this.center = center;\n        this.kernelSize = kernelSize;\n        this.radius = radius;\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear) {\n        this.uniforms.uKernelSize = this._angle !== 0 ? this.kernelSize : 0;\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n    /**\n     * Sets the angle in degrees of the motion for blur effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    set angle(value) {\n        this._angle = value;\n        this.uniforms.uRadian = value * Math.PI / 180;\n    }\n\n    get angle() {\n        return this._angle;\n    }\n\n    /**\n     * Center of the effect.\n     *\n     * @member {PIXI.Point|number[]}\n     * @default [0, 0]\n     */\n    get center() {\n        return this.uniforms.uCenter;\n    }\n\n    set center(value) {\n        this.uniforms.uCenter = value;\n    }\n\n    /**\n     * Outer radius of the effect. The default value of `-1` is infinite.\n     *\n     * @member {number}\n     * @default -1\n     */\n    get radius() {\n        return this.uniforms.uRadius;\n    }\n\n    set radius(value) {\n        if (value < 0 || value === Infinity) {\n            value = -1;\n        }\n        this.uniforms.uRadius = value;\n    }\n}\n\nexport { RadialBlurFilter };\n\n"],"names":["RadialBlurFilter","angle","center","kernelSize","radius","super","vertex","fragment","this","_angle","apply","filterManager","input","output","clear","uniforms","uKernelSize","applyFilter","prototypeAccessors","value","uRadian","Math","PI","uCenter","uRadius","Infinity","Filter"],"mappings":";;;;;;;oiEAkBMA,cACF,WAAYC,EAAWC,EAAiBC,EAAgBC,kBAApC,kBAAY,CAAC,EAAG,mBAAiB,mBAAa,GAC9DC,YAAMC,EAAQC,GAEdC,KAAKC,OAAS,EACdD,KAAKP,MAAQA,EACbO,KAAKN,OAASA,EACdM,KAAKL,WAAaA,EAClBK,KAAKJ,OAASA,8LAOlBM,eAAMC,EAAeC,EAAOC,EAAQC,GAChCN,KAAKO,SAASC,YAA8B,IAAhBR,KAAKC,OAAeD,KAAKL,WAAa,EAClEQ,EAAcM,YAAYT,KAAMI,EAAOC,EAAQC,IASnDI,EAAIjB,mBAAMkB,GACNX,KAAKC,OAASU,EACdX,KAAKO,SAASK,QAAUD,EAAQE,KAAKC,GAAK,KAG9CJ,EAAIjB,qBACA,OAAOO,KAAKC,QAShBS,EAAIhB,sBACA,OAAOM,KAAKO,SAASQ,SAGzBL,EAAIhB,oBAAOiB,GACPX,KAAKO,SAASQ,QAAUJ,GAS5BD,EAAId,sBACA,OAAOI,KAAKO,SAASS,SAGzBN,EAAId,oBAAOe,IACHA,EAAQ,GAAKA,IAAUM,EAAAA,KACvBN,GAAS,GAEbX,KAAKO,SAASS,QAAUL,6CA/DDO"}