{"version":3,"file":"filter-simple-lightmap.js","sources":["../src/SimpleLightmapFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './simpleLightmap.frag';\nimport {Filter} from '@pixi/core';\nimport {hex2rgb, rgb2hex} from '@pixi/utils';\n/**\n* SimpleLightmap, originally by Oza94\n* http://www.html5gamedevs.com/topic/20027-pixijs-simple-lightmapping/\n* http://codepen.io/Oza94/pen/EPoRxj\n*\n* You have to specify filterArea, or suffer consequences.\n* You may have to use it with `filter.dontFit = true`,\n*  until we rewrite this using same approach as for DisplacementFilter.\n*\n* ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/simple-lightmap.png)\n* @class\n* @extends PIXI.Filter\n* @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-simple-lightmap|@pixi/filter-simple-lightmap}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n* @param {PIXI.Texture} texture a texture where your lightmap is rendered\n* @param {Array<number>|number} [color=0x000000] An RGBA array of the ambient color\n* @param {number} [alpha=1] Default alpha set independent of color (if it's a number, not array).\n*\n* @example\n*  displayObject.filters = [new SimpleLightmapFilter(texture, 0x666666)];\n*/\nclass SimpleLightmapFilter extends Filter {\n\n    constructor(texture, color = 0x000000, alpha = 1) {\n        super(vertex, fragment);\n        this.uniforms.dimensions = new Float32Array(2);\n        this.uniforms.ambientColor = new Float32Array([0, 0, 0, alpha]);\n        this.texture = texture;\n        this.color = color;\n    }\n\n    /**\n     * Applies the filter.\n     * @private\n     * @param {PIXI.FilterManager} filterManager - The manager.\n     * @param {PIXI.RenderTarget} input - The input target.\n     * @param {PIXI.RenderTarget} output - The output target.\n     */\n    apply(filterManager, input, output, clear) {\n        this.uniforms.dimensions[0] = input.filterFrame.width;\n        this.uniforms.dimensions[1] = input.filterFrame.height;\n\n        // draw the filter...\n        filterManager.applyFilter(this, input, output, clear);\n    }\n\n\n    /**\n     * a texture where your lightmap is rendered\n     * @member {PIXI.Texture}\n     */\n    get texture() {\n        return this.uniforms.uLightmap;\n    }\n    set texture(value) {\n        this.uniforms.uLightmap = value;\n    }\n\n    /**\n     * An RGBA array of the ambient color or a hex color without alpha\n     * @member {Array<number>|number}\n     */\n    set color(value) {\n        const arr = this.uniforms.ambientColor;\n        if (typeof value === 'number') {\n            hex2rgb(value, arr);\n            this._color = value;\n        }\n        else {\n            arr[0] = value[0];\n            arr[1] = value[1];\n            arr[2] = value[2];\n            arr[3] = value[3];\n            this._color = rgb2hex(arr);\n        }\n    }\n    get color() {\n        return this._color;\n    }\n\n    /**\n     * When setting `color` as hex, this can be used to set alpha independently.\n     * @member {number}\n     */\n    get alpha() {\n        return this.uniforms.ambientColor[3];\n    }\n    set alpha(value) {\n        this.uniforms.ambientColor[3] = value;\n    }\n}\n\nexport { SimpleLightmapFilter };\n"],"names":["SimpleLightmapFilter","texture","color","alpha","super","vertex","fragment","this","uniforms","dimensions","Float32Array","ambientColor","apply","filterManager","input","output","clear","filterFrame","width","height","applyFilter","prototypeAccessors","uLightmap","value","const","arr","hex2rgb","_color","rgb2hex","Filter"],"mappings":";;;;;;;y4BA0BMA,cAEF,WAAYC,EAASC,EAAkBC,kBAAV,kBAAkB,GAC3CC,YAAMC,EAAQC,GACdC,KAAKC,SAASC,WAAa,IAAIC,aAAa,GAC5CH,KAAKC,SAASG,aAAe,IAAID,aAAa,CAAC,EAAG,EAAG,EAAGP,IACxDI,KAAKN,QAAUA,EACfM,KAAKL,MAAQA,8LAUjBU,eAAMC,EAAeC,EAAOC,EAAQC,GAChCT,KAAKC,SAASC,WAAW,GAAKK,EAAMG,YAAYC,MAChDX,KAAKC,SAASC,WAAW,GAAKK,EAAMG,YAAYE,OAGhDN,EAAcO,YAAYb,KAAMO,EAAOC,EAAQC,IAQnDK,EAAIpB,uBACA,OAAOM,KAAKC,SAASc,WAEzBD,EAAIpB,qBAAQsB,GACRhB,KAAKC,SAASc,UAAYC,GAO9BF,EAAInB,mBAAMqB,GACNC,IAAMC,EAAMlB,KAAKC,SAASG,aACL,iBAAVY,GACPG,UAAQH,EAAOE,GACflB,KAAKoB,OAASJ,IAGdE,EAAI,GAAKF,EAAM,GACfE,EAAI,GAAKF,EAAM,GACfE,EAAI,GAAKF,EAAM,GACfE,EAAI,GAAKF,EAAM,GACfhB,KAAKoB,OAASC,UAAQH,KAG9BJ,EAAInB,qBACA,OAAOK,KAAKoB,QAOhBN,EAAIlB,qBACA,OAAOI,KAAKC,SAASG,aAAa,IAEtCU,EAAIlB,mBAAMoB,GACNhB,KAAKC,SAASG,aAAa,GAAKY,6CAnELM"}