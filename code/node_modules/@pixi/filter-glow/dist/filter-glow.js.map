{"version":3,"file":"filter-glow.js","sources":["../src/GlowFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './glow.frag';\nimport {Filter} from '@pixi/core';\nimport {rgb2hex, hex2rgb} from '@pixi/utils';\n\n/**\n * GlowFilter, originally by mishaa\n * http://www.html5gamedevs.com/topic/12756-glow-filter/?hl=mishaa#entry73578\n * http://codepen.io/mishaa/pen/raKzrm<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/glow.png)\n *\n * @class\n *\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-glow|@pixi/filter-glow}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number} [distance=10] The distance of the glow. Make it 2 times more for resolution=2. It cant be changed after filter creation\n * @param {number} [outerStrength=4] The strength of the glow outward from the edge of the sprite.\n * @param {number} [innerStrength=0] The strength of the glow inward from the edge of the sprite.\n * @param {number} [color=0xffffff] The color of the glow.\n * @param {number} [quality=0.1] A number between 0 and 1 that describes the quality of the glow.\n *\n * @example\n *  someSprite.filters = [\n *      new GlowFilter(15, 2, 1, 0xFF0000, 0.5)\n *  ];\n */\nclass GlowFilter extends Filter {\n\n    constructor(distance = 10, outerStrength = 4, innerStrength = 0, color = 0xffffff, quality = 0.1) {\n        super(vertex, fragment\n            .replace(/%QUALITY_DIST%/gi, '' + (1 / quality / distance).toFixed(7))\n            .replace(/%DIST%/gi, '' + distance.toFixed(7)));\n\n        this.uniforms.glowColor = new Float32Array([0, 0, 0, 1]);\n        this.distance = distance;\n        this.color = color;\n        this.outerStrength = outerStrength;\n        this.innerStrength = innerStrength;\n    }\n\n    /**\n     * The color of the glow.\n     * @member {number}\n     * @default 0xFFFFFF\n     */\n    get color() {\n        return rgb2hex(this.uniforms.glowColor);\n    }\n    set color(value) {\n        hex2rgb(value, this.uniforms.glowColor);\n    }\n\n    /**\n     * The distance of the glow. Make it 2 times more for resolution=2. It cant be changed after filter creation\n     * @member {number}\n     * @default 10\n     */\n    get distance() {\n        return this.uniforms.distance;\n    }\n    set distance(value) {\n        this.uniforms.distance = value;\n    }\n\n    /**\n     * The strength of the glow outward from the edge of the sprite.\n     * @member {number}\n     * @default 4\n     */\n    get outerStrength() {\n        return this.uniforms.outerStrength;\n    }\n    set outerStrength(value) {\n        this.uniforms.outerStrength = value;\n    }\n\n    /**\n     * The strength of the glow inward from the edge of the sprite.\n     * @member {number}\n     * @default 0\n     */\n    get innerStrength() {\n        return this.uniforms.innerStrength;\n    }\n    set innerStrength(value) {\n        this.uniforms.innerStrength = value;\n    }\n}\n\nexport { GlowFilter };\n"],"names":["GlowFilter","distance","outerStrength","innerStrength","color","quality","super","vertex","fragment","replace","toFixed","this","uniforms","glowColor","Float32Array","prototypeAccessors","rgb2hex","value","hex2rgb","Filter"],"mappings":";;;;;;;qhEA4BMA,cAEF,WAAYC,EAAeC,EAAmBC,EAAmBC,EAAkBC,kBAA5D,mBAAoB,kBAAmB,kBAAW,yBAAoB,IACzFC,YAAMC,EAAQC,EACTC,QAAQ,mBAAoB,IAAM,EAAIJ,EAAUJ,GAAUS,QAAQ,IAClED,QAAQ,WAAY,GAAKR,EAASS,QAAQ,KAE/CC,KAAKC,SAASC,UAAY,IAAIC,aAAa,CAAC,EAAG,EAAG,EAAG,IACrDH,KAAKV,SAAWA,EAChBU,KAAKP,MAAQA,EACbO,KAAKT,cAAgBA,EACrBS,KAAKR,cAAgBA,2NAQzBY,EAAIX,qBACA,OAAOY,UAAQL,KAAKC,SAASC,YAEjCE,EAAIX,mBAAMa,GACNC,UAAQD,EAAON,KAAKC,SAASC,YAQjCE,EAAId,wBACA,OAAOU,KAAKC,SAASX,UAEzBc,EAAId,sBAASgB,GACTN,KAAKC,SAASX,SAAWgB,GAQ7BF,EAAIb,6BACA,OAAOS,KAAKC,SAASV,eAEzBa,EAAIb,2BAAce,GACdN,KAAKC,SAASV,cAAgBe,GAQlCF,EAAIZ,6BACA,OAAOQ,KAAKC,SAAST,eAEzBY,EAAIZ,2BAAcc,GACdN,KAAKC,SAAST,cAAgBc,6CA3DbE"}