{"version":3,"file":"filter-bloom.esm.js","sources":["../src/BloomFilter.js"],"sourcesContent":["import {Filter} from '@pixi/core';\nimport {BLEND_MODES} from '@pixi/constants';\nimport {AlphaFilter} from '@pixi/filter-alpha';\nimport {BlurFilterPass} from '@pixi/filter-blur';\nimport {settings} from '@pixi/settings';\nimport {Point} from '@pixi/math';\n\n/**\n * The BloomFilter applies a Gaussian blur to an object.\n * The strength of the blur can be set for x- and y-axis separately.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/bloom.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-bloom|@pixi/filter-bloom}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {number|PIXI.Point|number[]} [blur=2] Sets the strength of both the blurX and blurY properties simultaneously\n * @param {number} [quality=4] The quality of the blurX & blurY filter.\n * @param {number} [resolution=PIXI.settings.RESOLUTION] The resolution of the blurX & blurY filter.\n * @param {number} [kernelSize=5] The kernelSize of the blurX & blurY filter.Options: 5, 7, 9, 11, 13, 15.\n */\nclass BloomFilter extends Filter {\n\n    constructor(blur = 2, quality = 4, resolution = settings.RESOLUTION, kernelSize = 5) {\n        super();\n\n        let blurX;\n        let blurY;\n\n        if (typeof blur === 'number') {\n            blurX = blur;\n            blurY = blur;\n        }\n        else if (blur instanceof Point) {\n            blurX = blur.x;\n            blurY = blur.y;\n        }\n        else if (Array.isArray(blur)) {\n            blurX = blur[0];\n            blurY = blur[1];\n        }\n\n        this.blurXFilter = new BlurFilterPass(true, blurX, quality, resolution, kernelSize);\n        this.blurYFilter = new BlurFilterPass(false, blurY, quality, resolution, kernelSize);\n        this.blurYFilter.blendMode = BLEND_MODES.SCREEN;\n        this.defaultFilter = new AlphaFilter();\n    }\n\n    apply(filterManager, input, output) {\n        const renderTarget = filterManager.getFilterTexture(true);\n\n        //TODO - copyTexSubImage2D could be used here?\n        this.defaultFilter.apply(filterManager, input, output);\n\n        this.blurXFilter.apply(filterManager, input, renderTarget);\n        this.blurYFilter.apply(filterManager, renderTarget, output);\n\n        filterManager.returnFilterTexture(renderTarget);\n    }\n\n    /**\n     * Sets the strength of both the blurX and blurY properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blur() {\n        return this.blurXFilter.blur;\n    }\n    set blur(value) {\n        this.blurXFilter.blur = this.blurYFilter.blur = value;\n    }\n\n    /**\n     * Sets the strength of the blurX property\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blurX() {\n        return this.blurXFilter.blur;\n    }\n    set blurX(value) {\n        this.blurXFilter.blur = value;\n    }\n\n    /**\n     * Sets the strength of the blurY property\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blurY() {\n        return this.blurYFilter.blur;\n    }\n    set blurY(value) {\n        this.blurYFilter.blur = value;\n    }\n}\n\nexport { BloomFilter };\n\n"],"names":["super","let","const"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsBA,IAAM,WAAW;IAEb,oBAAW,CAAC,IAAQ,EAAE,OAAW,EAAE,UAAgC,EAAE,UAAc,EAAE;mCAArE,GAAG;yCAAU,GAAG;+CAAa,GAAG,QAAQ,CAAC;+CAAsB,GAAG;;QAC9EA,WAAK,KAAC,CAAC,CAAC;;QAERC,IAAI,KAAK,CAAC;QACVA,IAAI,KAAK,CAAC;;QAEV,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC1B,KAAK,GAAG,IAAI,CAAC;YACb,KAAK,GAAG,IAAI,CAAC;SAChB;aACI,IAAI,IAAI,YAAY,KAAK,EAAE;YAC5B,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;YACf,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC;SAClB;aACI,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YAC1B,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAChB,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACnB;;QAED,IAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACpF,IAAI,CAAC,WAAW,GAAG,IAAI,cAAc,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACrF,IAAI,CAAC,WAAW,CAAC,SAAS,GAAG,WAAW,CAAC,MAAM,CAAC;QAChD,IAAI,CAAC,aAAa,GAAG,IAAI,WAAW,EAAE,CAAC;;;;;;;0HAC1C;;0BAED,wBAAM,aAAa,EAAE,KAAK,EAAE,MAAM,EAAE;QAChCC,IAAM,YAAY,GAAG,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;;;QAG1D,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,EAAE,MAAM,CAAC,CAAC;;QAEvD,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,EAAE,KAAK,EAAE,YAAY,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,aAAa,EAAE,YAAY,EAAE,MAAM,CAAC,CAAC;;QAE5D,aAAa,CAAC,mBAAmB,CAAC,YAAY,CAAC,CAAC;MACnD;;;;;;;;IAQD,mBAAI,uBAAO;QACP,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;MAChC;IACD,mBAAI,qBAAK,KAAK,EAAE;QACZ,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;MACzD;;;;;;;;IAQD,mBAAI,wBAAQ;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;MAChC;IACD,mBAAI,sBAAM,KAAK,EAAE;QACb,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;MACjC;;;;;;;;IAQD,mBAAI,wBAAQ;QACR,OAAO,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;MAChC;IACD,mBAAI,sBAAM,KAAK,EAAE;QACb,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,CAAC;KACjC;;;;;EA5EqB;;;;"}