{"version":3,"file":"filter-pixelate.js","sources":["../src/PixelateFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './pixelate.frag';\nimport {Filter} from '@pixi/core';\n\n/**\n * This filter applies a pixelate effect making display objects appear 'blocky'.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/pixelate.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-pixelate|@pixi/filter-pixelate}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n * @param {PIXI.Point|Array<number>|number} [size=10] Either the width/height of the size of the pixels, or square size\n */\nclass PixelateFilter extends Filter {\n\n    constructor(size = 10) {\n        super(vertex, fragment);\n        this.size = size;\n    }\n\n    /**\n     * This a point that describes the size of the blocks.\n     * x is the width of the block and y is the height.\n     *\n     * @member {PIXI.Point|Array<number>|number}\n     * @default 10\n     */\n    get size() {\n        return this.uniforms.size;\n    }\n    set size(value) {\n        if (typeof value === 'number') {\n            value = [value, value];\n        }\n        this.uniforms.size = value;\n    }\n}\n\nexport { PixelateFilter };\n"],"names":["PixelateFilter","size","super","vertex","fragment","this","prototypeAccessors","uniforms","value","Filter"],"mappings":";;;;;;;g9BAeMA,cAEF,WAAYC,kBAAO,IACfC,YAAMC,EAAQC,GACdC,KAAKJ,KAAOA,+HAUhBK,EAAIL,oBACA,OAAOI,KAAKE,SAASN,MAEzBK,EAAIL,kBAAKO,GACgB,iBAAVA,IACPA,EAAQ,CAACA,EAAOA,IAEpBH,KAAKE,SAASN,KAAOO,6CArBAC"}