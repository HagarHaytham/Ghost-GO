{"version":3,"file":"filter-advanced-bloom.js","sources":["../src/ExtractBrightnessFilter.js","../src/AdvancedBloomFilter.js"],"sourcesContent":["import {vertex} from '@tools/fragments';\nimport fragment from './extract-brightness.frag';\nimport {Filter} from '@pixi/core';\n\n/**\n * Internal filter for AdvancedBloomFilter to get brightness.\n * @class\n * @private\n * @param {number} [threshold=0.5] Defines how bright a color needs to be extracted.\n */\nexport class ExtractBrightnessFilter extends Filter {\n\n    constructor(threshold = 0.5) {\n        super(vertex, fragment);\n\n        this.threshold = threshold;\n    }\n\n    /**\n     * Defines how bright a color needs to be extracted.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    get threshold() {\n        return this.uniforms.threshold;\n    }\n    set threshold(value) {\n        this.uniforms.threshold = value;\n    }\n}\n\n","import {ExtractBrightnessFilter} from './ExtractBrightnessFilter';\nimport {KawaseBlurFilter} from '@pixi/filter-kawase-blur';\nimport {vertex} from '@tools/fragments';\nimport fragment from './advanced-bloom.frag';\nimport {Filter} from '@pixi/core';\nimport {settings} from '@pixi/settings';\n\n/**\n * The AdvancedBloomFilter applies a Bloom Effect to an object. Unlike the normal BloomFilter\n * this had some advanced controls for adjusting the look of the bloom. Note: this filter\n * is slower than normal BloomFilter.<br>\n * ![original](../tools/screenshots/dist/original.png)![filter](../tools/screenshots/dist/advanced-bloom.png)\n *\n * @class\n * @extends PIXI.Filter\n * @memberof PIXI.filters\n * @see {@link https://www.npmjs.com/package/@pixi/filter-advanced-bloom|@pixi/filter-advanced-bloom}\n * @see {@link https://www.npmjs.com/package/pixi-filters|pixi-filters}\n *\n * @param {object|number} [options] - The optional parameters of advanced bloom filter.\n *                        When options is a number , it will be `options.threshold`.\n * @param {number} [options.threshold=0.5] - Defines how bright a color needs to be to affect bloom.\n * @param {number} [options.bloomScale=1.0] - To adjust the strength of the bloom. Higher values is more intense brightness.\n * @param {number} [options.brightness=1.0] - The brightness, lower value is more subtle brightness, higher value is blown-out.\n * @param {number} [options.blur=8] - Sets the strength of the Blur properties simultaneously\n * @param {number} [options.quality=4] - The quality of the Blur filter.\n * @param {number[]} [options.kernels=null] - The kernels of the Blur filter.\n * @param {number|number[]|PIXI.Point} [options.pixelSize=1] - the pixelSize of the Blur filter.\n * @param {number} [options.resolution=PIXI.settings.RESOLUTION] - The resolution of the Blur filter.\n */\nclass AdvancedBloomFilter extends Filter {\n\n    constructor(options) {\n\n        super(vertex, fragment);\n\n        if (typeof options === 'number') {\n            options = { threshold: options };\n        }\n\n        options = Object.assign({\n            threshold: 0.5,\n            bloomScale: 1.0,\n            brightness: 1.0,\n            kernels: null,\n            blur: 8,\n            quality: 4,\n            pixelSize: 1,\n            resolution: settings.RESOLUTION,\n        }, options);\n\n        /**\n         * To adjust the strength of the bloom. Higher values is more intense brightness.\n         *\n         * @member {number}\n         * @default 1.0\n         */\n        this.bloomScale = options.bloomScale;\n\n        /**\n         * The brightness, lower value is more subtle brightness, higher value is blown-out.\n         *\n         * @member {number}\n         * @default 1.0\n         */\n        this.brightness = options.brightness;\n\n        const { kernels, blur, quality, pixelSize, resolution } = options;\n\n        this._extractFilter = new ExtractBrightnessFilter(options.threshold);\n        this._extractFilter.resolution = resolution;\n        this._blurFilter = kernels ?\n            new KawaseBlurFilter(kernels) :\n            new KawaseBlurFilter(blur, quality);\n        this.pixelSize = pixelSize;\n        this.resolution = resolution;\n    }\n\n    /**\n     * Override existing apply method in PIXI.Filter\n     * @private\n     */\n    apply(filterManager, input, output, clear, currentState) {\n\n        const brightTarget = filterManager.getFilterTexture();\n\n        this._extractFilter.apply(filterManager, input, brightTarget, true, currentState);\n\n        const bloomTarget = filterManager.getFilterTexture();\n\n        this._blurFilter.apply(filterManager, brightTarget, bloomTarget, true, currentState);\n\n        this.uniforms.bloomScale = this.bloomScale;\n        this.uniforms.brightness = this.brightness;\n        this.uniforms.bloomTexture = bloomTarget;\n\n        filterManager.applyFilter(this, input, output, clear);\n\n        filterManager.returnFilterTexture(bloomTarget);\n        filterManager.returnFilterTexture(brightTarget);\n    }\n\n    /**\n     * The resolution of the filter.\n     *\n     * @member {number}\n     */\n    get resolution() {\n        return this._resolution;\n    }\n    set resolution(value) {\n        this._resolution = value;\n\n        if (this._extractFilter) {\n            this._extractFilter.resolution = value;\n        }\n        if (this._blurFilter) {\n            this._blurFilter.resolution = value;\n        }\n    }\n\n    /**\n     * Defines how bright a color needs to be to affect bloom.\n     *\n     * @member {number}\n     * @default 0.5\n     */\n    get threshold() {\n        return this._extractFilter.threshold;\n    }\n    set threshold(value) {\n        this._extractFilter.threshold = value;\n    }\n\n    /**\n     * Sets the kernels of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    get kernels() {\n        return this._blurFilter.kernels;\n    }\n    set kernels(value) {\n        this._blurFilter.kernels = value;\n    }\n\n    /**\n     * Sets the strength of the Blur properties simultaneously\n     *\n     * @member {number}\n     * @default 2\n     */\n    get blur() {\n        return this._blurFilter.blur;\n    }\n    set blur(value) {\n        this._blurFilter.blur = value;\n    }\n\n    /**\n     * Sets the quality of the Blur Filter\n     *\n     * @member {number}\n     * @default 4\n     */\n    get quality() {\n        return this._blurFilter.quality;\n    }\n    set quality(value) {\n        this._blurFilter.quality = value;\n    }\n\n    /**\n     * Sets the pixelSize of the Kawase Blur filter\n     *\n     * @member {number|number[]|PIXI.Point}\n     * @default 1\n     */\n    get pixelSize() {\n        return this._blurFilter.pixelSize;\n    }\n    set pixelSize(value) {\n        this._blurFilter.pixelSize = value;\n    }\n}\n\nexport { AdvancedBloomFilter };\n"],"names":["ExtractBrightnessFilter","threshold","super","vertex","fragment","this","prototypeAccessors","uniforms","value","Filter","AdvancedBloomFilter","options","Object","assign","bloomScale","brightness","kernels","blur","quality","pixelSize","resolution","settings","RESOLUTION","_extractFilter","_blurFilter","KawaseBlurFilter","apply","filterManager","input","output","clear","currentState","const","brightTarget","getFilterTexture","bloomTarget","bloomTexture","applyFilter","returnFilterTexture","_resolution"],"mappings":";;;;;;;84BAUaA,cAET,WAAYC,kBAAY,IACpBC,YAAMC,EAAQC,GAEdC,KAAKJ,UAAYA,oIASrBK,EAAIL,yBACA,OAAOI,KAAKE,SAASN,WAEzBK,EAAIL,uBAAUO,GACVH,KAAKE,SAASN,UAAYO,6CAlBWC,maCoBvCC,cAEF,WAAYC,GAERT,YAAMC,EAAQC,GAES,iBAAZO,IACPA,EAAU,CAAEV,UAAWU,IAG3BA,EAAUC,OAAOC,OAAO,CACpBZ,UAAW,GACXa,WAAY,EACZC,WAAY,EACZC,QAAS,KACTC,KAAM,EACNC,QAAS,EACTC,UAAW,EACXC,WAAYC,WAASC,YACtBX,GAQHN,KAAKS,WAAaH,EAAQG,WAQ1BT,KAAKU,WAAaJ,EAAQI,WAE1B,kEAEAV,KAAKkB,eAAiB,IAAIvB,EAAwBW,EAAQV,WAC1DI,KAAKkB,eAAeH,WAAaA,EACjCf,KAAKmB,YAAcR,EACf,IAAIS,mBAAiBT,GACrB,IAAIS,mBAAiBR,EAAMC,GAC/Bb,KAAKc,UAAYA,EACjBd,KAAKe,WAAaA,oRAOtBM,eAAMC,EAAeC,EAAOC,EAAQC,EAAOC,GAEvCC,IAAMC,EAAeN,EAAcO,mBAEnC7B,KAAKkB,eAAeG,MAAMC,EAAeC,EAAOK,GAAc,EAAMF,GAEpEC,IAAMG,EAAcR,EAAcO,mBAElC7B,KAAKmB,YAAYE,MAAMC,EAAeM,EAAcE,GAAa,EAAMJ,GAEvE1B,KAAKE,SAASO,WAAaT,KAAKS,WAChCT,KAAKE,SAASQ,WAAaV,KAAKU,WAChCV,KAAKE,SAAS6B,aAAeD,EAE7BR,EAAcU,YAAYhC,KAAMuB,EAAOC,EAAQC,GAE/CH,EAAcW,oBAAoBH,GAClCR,EAAcW,oBAAoBL,IAQtC3B,EAAIc,0BACA,OAAOf,KAAKkC,aAEhBjC,EAAIc,wBAAWZ,GACXH,KAAKkC,YAAc/B,EAEfH,KAAKkB,iBACLlB,KAAKkB,eAAeH,WAAaZ,GAEjCH,KAAKmB,cACLnB,KAAKmB,YAAYJ,WAAaZ,IAUtCF,EAAIL,yBACA,OAAOI,KAAKkB,eAAetB,WAE/BK,EAAIL,uBAAUO,GACVH,KAAKkB,eAAetB,UAAYO,GASpCF,EAAIU,uBACA,OAAOX,KAAKmB,YAAYR,SAE5BV,EAAIU,qBAAQR,GACRH,KAAKmB,YAAYR,QAAUR,GAS/BF,EAAIW,oBACA,OAAOZ,KAAKmB,YAAYP,MAE5BX,EAAIW,kBAAKT,GACLH,KAAKmB,YAAYP,KAAOT,GAS5BF,EAAIY,uBACA,OAAOb,KAAKmB,YAAYN,SAE5BZ,EAAIY,qBAAQV,GACRH,KAAKmB,YAAYN,QAAUV,GAS/BF,EAAIa,yBACA,OAAOd,KAAKmB,YAAYL,WAE5Bb,EAAIa,uBAAUX,GACVH,KAAKmB,YAAYL,UAAYX,6CAzJHC"}